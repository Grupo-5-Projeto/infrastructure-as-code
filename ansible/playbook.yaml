- hosts: ec2
  become: yes
  gather_facts: no
  tasks:
    - name: update yum
      raw: |
        sudo yum update -y && sudo yum upgrade -y
        
    - name: install docker
      raw: |
        sudo amazon-linux-extras install docker -y
        sudo service docker start
        sudo usermod -a -G docker ec2-user 
      register: result_install
      changed_when: "'Complete!' in result_install.stdout or 'Nothing to do' in result_install.stdout"
      failed_when: result_install.rc != 0 and not ('Nothing to do' in result_install.stdout or 'already installed' in result_install.stdout)
    
    - name: config composer
      raw: |
        DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
        mkdir -p $DOCKER_CONFIG/cli-plugins
        curl -SL https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
        chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
      register: result
      changed_when: "'Complete!' in result.stdout or 'Nothing to do' in result.stdout"
      failed_when: result.rc != 0 and not ('Nothing to do' in result.stdout or 'already installed' in result.stdout)

    - name: install python libs
      raw: |
        pip3 install "boto3<=1.26.164" "urllib3<2.0" papermill dotenv
      register: result
      changed_when: "'Complete!' in result.stdout or 'Nothing to do' in result.stdout"
      failed_when: result.rc != 0 and not ('Nothing to do' in result.stdout or 'already installed' in result.stdout)

    - name: install git
      raw: |
        sudo yum install -y git

    - name: Clonar ou atualizar repositÃ³rio via raw
      raw: |
        /bin/bash -c '
        REPO_DIR="/home/ec2-user/tratativas-bases"
        if [ -d "$REPO_DIR/.git" ]; then
          cd "$REPO_DIR" && git pull
        else
          git clone https://github.com/Grupo-5-Projeto/tratativas-bases.git "$REPO_DIR"
        fi
        '


    - name: start docker compose
      raw: |
        cd docker
        docker compose up -d

    - name: start crond 
      raw: |
        sudo systemctl enable crond
        sudo systemctl start crond

    - name: test
      raw: |
        mkdir /home/ec2-user/log
        touch /home/ec2-user/log/python_script.log
        [ ! -f /home/ec2-user/automacoes/arquivos_processados.json ] && echo "[]" > /home/ec2-user/automacoes/arquivos_processados.json
        sudo chmod 646 /home/ec2-user/automacoes/arquivos_processados.json

    - name: Adicionar entrada no crontab manualmente sem duplicar
      raw: |
        grep -qxF "*/5 * * * * /usr/bin/python3 /home/ec2-user/automacoes/get-iot-data-in-bucket.py >> /home/ec2-user/log/python_script.log 2>> /home/ec2-user/log/python_error.log" <(crontab -l 2>/dev/null) || \
        (crontab -l 2>/dev/null; echo "*/5 * * * * /usr/bin/python3 /home/ec2-user/automacoes/get-iot-data-in-bucket.py >> /home/ec2-user/log/python_script.log 2>> /home/ec2-user/log/python_error.log") | crontab -
